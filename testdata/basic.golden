//gosl: start basic

// DataStruct has the test data
struct DataStruct  {
	float Raw;
	float Integ;
	float Exp;
	float Pad2;
};

// ParamStruct has the test params
struct ParamStruct  {
	float Tau;
	float Dt;

// IntegFmRaw computes integrated value from current raw value
	void IntegFmRaw(inout DataStruct ds, inout float modArg) {
		// note: the following are just to test basic control structures
		float newVal; // note: cannot use newVal := to define vars
		newVal = this.Dt*(ds.Raw-ds.Integ) + modArg;
		if (newVal < -10) {
			newVal = -10;
			int i;
			for (i = 0; i < 10; i++) {
				newVal *= 0.99;
			}
		}
		ds.Integ += newVal;
		ds.Exp = exp(-ds.Integ);
	}

};


//gosl: end basic
//gosl: hlsl basic
/*
[[vk::binding(0, 0)]] uniform ParamStruct Params;
[[vk::binding(0, 1)]] RWStructuredBuffer<DataStruct> Data;
[numthreads(1, 1, 1)]
void main(uint3 idx : SV_DispatchThreadID) {
    Params.IntegFmRaw(Data[idx.x], Data[idx.x].Pad2);
}
*/
//gosl: end basic